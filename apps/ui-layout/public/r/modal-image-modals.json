{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "modal-image-modals",
  "type": "registry:component",
  "dependencies": [
    "framer-motion",
    "lucide-react",
    "react",
    "react-dom"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/modal/image-modals.tsx",
      "content": "'use client';\nimport { motion, AnimatePresence, MotionConfig } from 'framer-motion';\nimport { XIcon } from 'lucide-react';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst transition = {\n  type: 'spring',\n  duration: 0.4,\n};\nexport default function Dialog() {\n  const [index, setIndex] = useState(5);\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    if (isOpen) {\n      document.body.classList.add('overflow-hidden');\n    } else {\n      document.body.classList.remove('overflow-hidden');\n    }\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isOpen]);\n  type Item = {\n    id: number;\n    imgSrc?: string;\n    videoSrc?: string;\n  };\n\n  const items: Item[] = [\n    {\n      id: 1,\n      imgSrc:\n        'https://images.unsplash.com/photo-1726824766931-4bd8b59af37c?q=80&w=1000&auto=format&fit=crop',\n    },\n    {\n      id: 2,\n      videoSrc:\n        'https://videos.pexels.com/video-files/7710243/7710243-uhd_2560_1440_30fps.mp4',\n    },\n  ];\n  const [carouselWidth, setCarouselWidth] = useState(0);\n  const carousel = useRef(null);\n  useEffect(() => {\n    setCarouselWidth(\n      // @ts-ignore\n      carousel.current.scrollWidth - carousel.current.offsetWidth\n    );\n  }, [carousel]);\n  return (\n    <div className='relative h-full'>\n      <MotionConfig transition={transition}>\n        <motion.div\n          ref={carousel}\n          drag='x'\n          dragElastic={0.2}\n          dragConstraints={{ right: 0, left: -carouselWidth }}\n          dragTransition={{ bounceDamping: 30 }}\n          transition={{ duration: 8, ease: 'easeInOut' }}\n          className='flex w-full  gap-4   py-10'\n        >\n          {items.map((item, i) => {\n            return (\n              <>\n                <motion.div\n                  // @ts-ignore\n                  key={item}\n                  className='w-full flex relative  flex-col overflow-hidden border    dark:bg-black bg-gray-300 hover:bg-gray-200 dark:hover:bg-gray-950'\n                  layoutId={`dialog-${item?.id}`}\n                  style={{\n                    borderRadius: '12px',\n                  }}\n                  tabIndex={i}\n                  onClick={() => {\n                    setIndex(i);\n                    setIsOpen(true);\n                  }}\n                >\n                  {item?.imgSrc && (\n                    <motion.div\n                      layoutId={`dialog-img-${item.id}`}\n                      className='w-full h-full'\n                    >\n                      <img\n                        src={item.imgSrc}\n                        alt='A desk lamp designed by Edouard Wilfrid Buquet in 1925. It features a double-arm design and is made from nickel-plated brass, aluminium and varnished wood.'\n                        className=' w-full object-cover'\n                      />\n                    </motion.div>\n                  )}\n                  {item?.videoSrc && (\n                    <motion.div\n                      layoutId={`dialog-video-${item.id}`}\n                      className='w-full h-full'\n                    >\n                      <video\n                        autoPlay\n                        muted\n                        loop\n                        className='h-full w-full object-cover  rounded-sm'\n                      >\n                        <source src={item.videoSrc!} type='video/mp4' />\n                      </video>\n                    </motion.div>\n                  )}\n                </motion.div>\n              </>\n            );\n          })}\n        </motion.div>\n        <AnimatePresence initial={false} mode='sync'>\n          {isOpen && (\n            <>\n              <motion.div\n                key={`backdrop-${items[index].id}`}\n                className='fixed inset-0 h-full w-full dark:bg-black/25 bg-white/95 backdrop-blur-sm '\n                variants={{ open: { opacity: 1 }, closed: { opacity: 0 } }}\n                initial='closed'\n                animate='open'\n                exit='closed'\n                onClick={() => {\n                  setIsOpen(false);\n                }}\n              />\n              <motion.div\n                key='dialog'\n                className='pointer-events-none fixed inset-0 flex items-center justify-center z-50'\n              >\n                <motion.div\n                  className='pointer-events-auto relative flex flex-col overflow-hidden   dark:bg-gray-950 bg-gray-200 border w-[80%] h-[90%] '\n                  layoutId={`dialog-${items[index].id}`}\n                  tabIndex={-1}\n                  style={{\n                    borderRadius: '24px',\n                  }}\n                >\n                  {items[index]?.imgSrc && (\n                    <motion.div\n                      layoutId={`dialog-img-${items[index].id}`}\n                      className='w-full h-full'\n                    >\n                      <img\n                        src={items[index].imgSrc}\n                        alt=''\n                        className='h-full w-full object-cover'\n                      />\n                    </motion.div>\n                  )}\n                  {items[index]?.videoSrc && (\n                    <motion.div\n                      layoutId={`dialog-video-${items[index].id}`}\n                      className='w-full h-full'\n                    >\n                      <video\n                        autoPlay\n                        muted\n                        loop\n                        controls\n                        className='h-full w-full object-cover  rounded-sm'\n                      >\n                        <source src={items[index].videoSrc!} type='video/mp4' />\n                      </video>\n                    </motion.div>\n                  )}\n\n                  <button\n                    onClick={() => setIsOpen(false)}\n                    className='absolute right-6 top-6 p-3 text-zinc-50 cursor-pointer dark:bg-gray-900 bg-gray-400 hover:bg-gray-500 rounded-full dark:hover:bg-gray-800'\n                    type='button'\n                    aria-label='Close dialog'\n                  >\n                    <XIcon size={24} />\n                  </button>\n                </motion.div>\n              </motion.div>\n            </>\n          )}\n        </AnimatePresence>\n      </MotionConfig>\n    </div>\n  );\n}\n",
      "path": "registry/components/modal/image-modals.tsx"
    }
  ]
}
