{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "drawer-left-sidebar-drawer",
  "type": "registry:component",
  "dependencies": [
    "clsx",
    "framer-motion",
    "lucide-react",
    "next",
    "react",
    "tailwind-merge",
    "vaul"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/drawer/left-sidebar-drawer.tsx",
      "content": "'use client';\nimport { Drawer } from 'vaul';\nimport { motion } from 'framer-motion';\nimport { useState } from 'react';\nimport { Edit, X } from 'lucide-react';\nimport { useMediaQuery } from '@/hooks/use-media-query';\nimport Image from 'next/image';\nimport {\n  DrawerContent,\n  SidebarDrawer,\n} from '@/components/core/drawer/vaul-sidebar';\n\nexport default function index() {\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  return (\n    <>\n      <SidebarDrawer\n        open={sidebarOpen}\n        setOpen={setSidebarOpen}\n        direction={'left'}\n        outsideClose={true}\n      >\n        <DrawerContent>\n          <figure className=' w-full h-full  flex flex-col'>\n            <div className='p-5  rounded-t-[10px] flex-grow  h-full w-full'>\n              <h1 className='font-medium  text-2xl'>Update Profile Image</h1>\n              <p className='text-sm text-muted-foreground'>\n                Upload a new profile image or remove the current one.\n              </p>\n              <div className='p-2 space-y-4 '>\n                <span className='relative flex justify-center overflow-hidden rounded-xl w-full '>\n                  <span className='grid place-content-center h-40  w-40 rounded-xl bg-muted'>\n                    JP\n                  </span>\n                </span>\n                <div className='mb-3'>\n                  <input\n                    className='w-full border file:p-2 file:bg-black  file:border-none  file:text-white rounded-sm overflow-hidden'\n                    type='file'\n                    id='formFile'\n                  />\n                </div>\n                <button\n                  type='submit'\n                  className='w-full rounded-sm dark:bg-white bg-black  p-2 dark:text-black text-white'\n                >\n                  Submit\n                </button>\n              </div>\n            </div>\n            <div className='p-4 bg-zinc-100 border-t border-zinc-200 '>\n              <div className='flex gap-6 justify-start max-w-md mx-auto'>\n                <a\n                  className='text-xs text-zinc-600 flex items-center gap-0.25'\n                  href='https://github.com/naymurdev'\n                  target='_blank'\n                >\n                  GitHub\n                  <svg\n                    fill='none'\n                    height='16'\n                    stroke='currentColor'\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth='2'\n                    viewBox='0 0 24 24'\n                    width='16'\n                    aria-hidden='true'\n                    className='w-3 h-3 ml-1'\n                  >\n                    <path d='M18 13v6a2 2 0 01-2 2H5a2 2 0 01-2-2V8a2 2 0 012-2h6'></path>\n                    <path d='M15 3h6v6'></path>\n                    <path d='M10 14L21 3'></path>\n                  </svg>\n                </a>\n                <a\n                  className='text-xs text-zinc-600 flex items-center gap-0.25'\n                  href='https://twitter.com/naymur_dev'\n                  target='_blank'\n                >\n                  Twitter\n                  <svg\n                    fill='none'\n                    height='16'\n                    stroke='currentColor'\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth='2'\n                    viewBox='0 0 24 24'\n                    width='16'\n                    aria-hidden='true'\n                    className='w-3 h-3 ml-1'\n                  >\n                    <path d='M18 13v6a2 2 0 01-2 2H5a2 2 0 01-2-2V8a2 2 0 012-2h6'></path>\n                    <path d='M15 3h6v6'></path>\n                    <path d='M10 14L21 3'></path>\n                  </svg>\n                </a>\n              </div>\n            </div>\n          </figure>\n        </DrawerContent>\n      </SidebarDrawer>\n      <div className='flex justify-center'>\n        <figure className='h-96 w-96 relative'>\n          <Image\n            src={'/myself.webp'}\n            width={600}\n            height={600}\n            className='h-full w-full object-cover rounded-lg '\n            alt='profile_image'\n          />\n          <motion.button\n            whileTap={{ scale: 0.8 }}\n            onClick={() => setSidebarOpen(true)}\n            className='absolute left-2 bottom-2 p-4 dark:bg-black bg-white rounded-lg shadow-black'\n          >\n            <Edit />\n          </motion.button>\n        </figure>\n      </div>\n    </>\n  );\n}\n",
      "path": "registry/components/drawer/left-sidebar-drawer.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/core/drawer/vaul-sidebar.tsx",
      "content": "'use client';\nimport React, {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  ReactNode,\n} from 'react';\nimport { X } from 'lucide-react';\nimport { Drawer as VaulSidebar } from 'vaul';\nimport { cn } from '@/lib/utils';\n\ninterface DrawerContextProps {\n  open: boolean;\n  setOpen: (open: boolean) => void;\n}\n\nconst DrawerContext = createContext<DrawerContextProps | undefined>(undefined);\n\nconst useSidebarDrawer = () => {\n  const context = useContext(DrawerContext);\n  if (!context) {\n    throw new Error('useDrawer must be used within a DrawerProvider');\n  }\n  return context;\n};\n\ninterface DrawerSidebarProps {\n  children: ReactNode;\n  open?: boolean;\n  setOpen?: (open: boolean) => void;\n  direction?: 'left' | 'right';\n  outsideClose?: boolean;\n  className?: string;\n  triggerClassName?: string;\n  DefaultTrigger?: () => React.ReactNode; // Changed to a function that returns ReactNode\n}\n\nexport function SidebarDrawer({\n  children,\n  open: controlledOpen,\n  setOpen: controlledSetOpen,\n  direction = 'left',\n  outsideClose = true,\n  className,\n  triggerClassName,\n  DefaultTrigger, // Now a function prop\n}: DrawerSidebarProps) {\n  const [internalOpen, setInternalOpen] = useState(false);\n  const open = controlledOpen !== undefined ? controlledOpen : internalOpen;\n  const setOpen =\n    controlledSetOpen !== undefined ? controlledSetOpen : setInternalOpen;\n\n  const [isDesktop, setIsDesktop] = useState(false);\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(min-width: 768px)');\n    const handleMediaChange = (event: MediaQueryListEvent) => {\n      setIsDesktop(event.matches);\n    };\n\n    setIsDesktop(mediaQuery.matches);\n    mediaQuery.addEventListener('change', handleMediaChange);\n\n    return () => {\n      mediaQuery.removeEventListener('change', handleMediaChange);\n    };\n  }, []);\n\n  return (\n    <DrawerContext.Provider value={{ open, setOpen }}>\n      <>\n        {DefaultTrigger && (\n          <div onClick={() => setOpen(true)}>{DefaultTrigger()}</div>\n        )}\n\n        <VaulSidebar.Root\n          open={open}\n          direction={direction === 'right' ? 'right' : 'left'}\n          onOpenChange={setOpen}\n          dismissible={isDesktop ? false : true}\n        >\n          <VaulSidebar.Portal>\n            <VaulSidebar.Overlay\n              className='fixed inset-0 dark:bg-black/40 bg-white/50 backdrop-blur-sm z-50  '\n              onClick={() => setOpen(false)}\n            />\n            <VaulSidebar.Content\n              className={cn(\n                ` border-l z-50  ${\n                  outsideClose\n                    ? 'sm:w-[450px] w-[90%] h-[100%]  dark:bg-zinc-950 bg-zinc-100'\n                    : `w-full h-[100%]  `\n                } fixed bottom-0  ${\n                  direction === 'right' ? 'right-0' : 'left-0'\n                }`,\n                className\n              )}\n            >\n              <div\n                className={`${\n                  outsideClose\n                    ? 'w-full h-full'\n                    : 'dark:bg-gray-900 relative bg-white   border-r sm:w-[450px] w-[90%] h-full'\n                } `}\n              >\n                {isDesktop ? (\n                  <>\n                    <button\n                      className='flex justify-end w-full absolute right-2 top-2'\n                      onClick={() => setOpen(false)}\n                    >\n                      <X />\n                    </button>\n                  </>\n                ) : (\n                  <>\n                    <div\n                      className={`absolute top-[40%] ${\n                        direction === 'right' ? 'left-2' : 'right-2'\n                      } mx-auto h-16 w-[0.30rem] flex-shrink-0 rounded-full bg-gray-600 my-4`}\n                    />\n                  </>\n                )}\n                {children}\n              </div>\n            </VaulSidebar.Content>\n          </VaulSidebar.Portal>\n        </VaulSidebar.Root>\n      </>\n    </DrawerContext.Provider>\n  );\n}\n\nexport function DrawerContent({ children }: { children: ReactNode }) {\n  return <>{children}</>;\n}\n",
      "path": "components/core/drawer/vaul-sidebar.tsx"
    },
    {
      "type": "registry:lib",
      "target": "lib/utils.ts",
      "content": "import { ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport function debounce(\n  func: (...args: any[]) => any,\n  wait: number,\n  immediate: boolean = false\n) {\n  let timeout: number | undefined;\n\n  return function executedFunction(this: any, ...args: any[]) {\n    const context: any = this;\n\n    const later = () => {\n      timeout = undefined;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n\n    const callNow: boolean = immediate && !timeout;\n\n    clearTimeout(timeout);\n\n    timeout = window.setTimeout(later, wait);\n\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n}\n\nexport function throttle(fn: (...args: any[]) => any, wait: number) {\n  let shouldWait = false;\n\n  return function throttledFunction(this: any, ...args: any[]) {\n    if (!shouldWait) {\n      fn.apply(this, args);\n      shouldWait = true;\n      setTimeout(() => (shouldWait = false), wait);\n    }\n  };\n}\n\nexport const siteConfig = {\n  name: 'ui-layouts',\n  url: 'https://ui-layouts.com',\n  ogImage: 'https://www.ui-layouts.com/og.jpg',\n  description:\n    'Beautifully designed components that you can copy and paste into your apps. Accessible. Customizable. Open Source.',\n  links: {\n    twitter: 'https://twitter.com/naymur_dev',\n    linkedin: 'https://www.linkedin.com/in/naymur-rahman',\n    github: 'https://github.com/naymurdev',\n  },\n};\n\nexport type SiteConfig = typeof siteConfig;\n",
      "path": "lib/utils.ts"
    },
    {
      "type": "registry:hook",
      "target": "hooks/use-media-query.tsx",
      "content": "import { useEffect, useState } from 'react'\n\nexport function useMediaQuery(query: string) {\n  const [value, setValue] = useState(false)\n\n  useEffect(() => {\n    function onChange(event: MediaQueryListEvent) {\n      setValue(event.matches)\n    }\n\n    const result = matchMedia(query)\n    result.addEventListener('change', onChange)\n    setValue(result.matches)\n\n    return () => result.removeEventListener('change', onChange)\n  }, [query])\n\n  return value\n}\n",
      "path": "hooks/use-media-query.tsx"
    }
  ]
}
