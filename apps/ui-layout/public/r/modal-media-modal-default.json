{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "modal-media-modal-default",
  "type": "registry:component",
  "dependencies": [
    "framer-motion",
    "lucide-react",
    "react"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/modal/media-modal-default.tsx",
      "content": "import { MediaModal } from '@/components/core/modal/media-modal';\n\nexport default function Dialog() {\n  return (\n    <div className='relative h-full'>\n      <div className='grid grid-cols-2 gap-2 h-full'>\n        <MediaModal\n          imgSrc={\n            'https://images.unsplash.com/photo-1726824766931-4bd8b59af37c?q=80&w=1000&auto=format&fit=cropD'\n          }\n        />\n        <MediaModal\n          videoSrc={\n            'https://videos.pexels.com/video-files/7710243/7710243-uhd_2560_1440_30fps.mp4'\n          }\n        />\n      </div>\n    </div>\n  );\n}\n",
      "path": "registry/components/modal/media-modal-default.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/core/modal/media-modal.tsx",
      "content": "// @ts-nocheck\n'use client';\nimport React, { useEffect, useId, useState } from 'react';\nimport { AnimatePresence, motion, MotionConfig } from 'framer-motion';\nimport { useMediaQuery } from '@/hooks/use-media-query';\nimport { XIcon } from 'lucide-react';\n\ninterface IMediaModal {\n  imgSrc?: string;\n  videoSrc?: string;\n  className?: string;\n}\nconst transition = {\n  type: 'spring',\n  duration: 0.4,\n};\nexport function MediaModal({ imgSrc, videoSrc, className }: IMediaModal) {\n  const [isMediaModalOpen, setIsMediaModalOpen] = useState(false);\n  const isDesktop = useMediaQuery('(min-width:768px)');\n  const uniqueId = useId();\n\n  useEffect(() => {\n    if (isMediaModalOpen) {\n      document.body.classList.add('overflow-hidden');\n    } else {\n      document.body.classList.remove('overflow-hidden');\n    }\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        setIsMediaModalOpen(false);\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isMediaModalOpen]);\n  return (\n    <>\n      <MotionConfig transition={transition}>\n        <>\n          <motion.div\n            // @ts-ignore\n            className='w-full h-full flex relative  flex-col overflow-hidden border    dark:bg-black bg-gray-300 hover:bg-gray-200 dark:hover:bg-gray-950'\n            layoutId={`dialog-${uniqueId}`}\n            style={{\n              borderRadius: '12px',\n            }}\n            onClick={() => {\n              setIsMediaModalOpen(true);\n            }}\n          >\n            {imgSrc && (\n              <motion.div\n                layoutId={`dialog-img-${uniqueId}`}\n                className='w-full h-full'\n              >\n                {/* eslint-disable-next-line @next/next/no-img-element */}\n                <img\n                  src={imgSrc}\n                  alt='A desk lamp designed by Edouard Wilfrid Buquet in 1925. It features a double-arm design and is made from nickel-plated brass, aluminium and varnished wood.'\n                  className=' w-full object-cover h-full'\n                />\n              </motion.div>\n            )}\n            {videoSrc && (\n              <motion.div\n                layoutId={`dialog-video-${uniqueId}`}\n                className='w-full h-full'\n              >\n                <video\n                  autoPlay\n                  muted\n                  loop\n                  className='h-full w-full object-cover  rounded-sm'\n                >\n                  <source src={videoSrc!} type='video/mp4' />\n                </video>\n              </motion.div>\n            )}\n          </motion.div>\n        </>\n        {/* {createPortal( */}\n        <AnimatePresence initial={false} mode='sync'>\n          {isMediaModalOpen && (\n            <>\n              <motion.div\n                key={`backdrop-${uniqueId}`}\n                className='fixed inset-0 h-full w-full z-50  dark:bg-black/25 bg-white/95 backdrop-blur-sm '\n                variants={{ open: { opacity: 1 }, closed: { opacity: 0 } }}\n                initial='closed'\n                animate='open'\n                exit='closed'\n                onClick={() => {\n                  setIsMediaModalOpen(false);\n                }}\n              />\n              <motion.div\n                key='dialog'\n                className='pointer-events-none fixed inset-0 flex items-center justify-center z-50'\n              >\n                <motion.div\n                  className='pointer-events-auto relative flex flex-col overflow-hidden   dark:bg-gray-950 bg-gray-200 border w-[80%] h-[90%] '\n                  layoutId={`dialog-${uniqueId}`}\n                  tabIndex={-1}\n                  style={{\n                    borderRadius: '24px',\n                  }}\n                >\n                  {imgSrc && (\n                    <motion.div\n                      layoutId={`dialog-img-${uniqueId}`}\n                      className='w-full h-full'\n                    >\n                      {/* eslint-disable-next-line @next/next/no-img-element */}\n                      <img\n                        src={imgSrc}\n                        alt=''\n                        className='h-full w-full object-cover'\n                      />\n                    </motion.div>\n                  )}\n                  {videoSrc && (\n                    <motion.div\n                      layoutId={`dialog-video-${uniqueId}`}\n                      className='w-full h-full'\n                    >\n                      <video\n                        autoPlay\n                        muted\n                        loop\n                        controls\n                        className='h-full w-full object-cover  rounded-sm'\n                      >\n                        <source src={videoSrc!} type='video/mp4' />\n                      </video>\n                    </motion.div>\n                  )}\n\n                  <button\n                    onClick={() => setIsMediaModalOpen(false)}\n                    className='absolute right-6 top-6 p-3 text-zinc-50 cursor-pointer dark:bg-gray-900 bg-gray-400 hover:bg-gray-500 rounded-xl dark:hover:bg-gray-800'\n                    type='button'\n                    aria-label='Close dialog'\n                  >\n                    <XIcon size={24} />\n                  </button>\n                </motion.div>\n              </motion.div>\n            </>\n          )}\n        </AnimatePresence>\n        {/* , */}\n        {/*    document.body\n       )} */}\n      </MotionConfig>\n    </>\n  );\n}\n",
      "path": "components/core/modal/media-modal.tsx"
    },
    {
      "type": "registry:hook",
      "target": "hooks/use-media-query.tsx",
      "content": "import { useEffect, useState } from 'react'\n\nexport function useMediaQuery(query: string) {\n  const [value, setValue] = useState(false)\n\n  useEffect(() => {\n    function onChange(event: MediaQueryListEvent) {\n      setValue(event.matches)\n    }\n\n    const result = matchMedia(query)\n    result.addEventListener('change', onChange)\n    setValue(result.matches)\n\n    return () => result.removeEventListener('change', onChange)\n  }, [query])\n\n  return value\n}\n",
      "path": "hooks/use-media-query.tsx"
    }
  ]
}
